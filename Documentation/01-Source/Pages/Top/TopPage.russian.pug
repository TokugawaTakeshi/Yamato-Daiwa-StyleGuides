extends ../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/Minimal/MinimalLayout.pug


block append Requirements

  include ../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "ru";
    HTML_PAGE_TITLE = buildHTML_PageTitle("Главная страница");
    HTML_PageMetaData = {
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInPublicRoot/favicon.ico"

    styleSheetsURIs = [
      "$CommonStyles",
      "$LayoutsStyles/Minimal/MinimalLayout.css",
      "$PreMadesStyles",
      "@CustomizedExternalComponents",
      "@Pages/Top/TopPage"
    ];

    scriptsURIs.endOfBody = [ "$CommonLogic" ];

    RoutingEmulator.setCurrentRoute("top");

    LanguageDropDownList__YDF_DK.setLinks({
      english: "./../index.html",
      japanese: "./TopPage.japanese.html"
    });


block append HeadScriptsLinks

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  main.TopPage

    .TopPage-ImageAndTopHeadingGroup

      img.TopPage-ImageAndTopHeadingGroup-Image(
        src="@Shared/Icons/YDSG_Icon.svg"
        alt="Иконка «Yamato Daiwa Styles Guides»"
      )

      h1.TopPage-ImageAndTopHeadingGroup-Heading
        span.TopPage-ImageAndTopHeadingGroup-Heading-FirstLine Yamato Daiwa
        span.TopPage-ImageAndTopHeadingGroup-Heading-SecondLine Style Guides

    p.TopPage-ShortDescription-Heading.
      Пресеты ESLint и pug-lint.
      Отличаются крайне строгими настройками, рассчитанными на максимальное качество кода.

    +CompactTableOfContents--YDF_DK(localizedRouting).TopPage-TableOfContents

    article

      h2.Article-Heading2 Особенности пресета

      p.Article-Paragraph.
        Пресет разработан ...


      h2.Article-Heading2 О создателях гайдлайнов

      p.Article-Paragraph.
        Скажем начистоту — мы ни с кем не советовались по поводу опубликованных здесь рекомендаций и ничьего мнения
          не спрашивали (за исключением редких случаев).
        Более того, мы и так знаем, что во многих моментах, например как следует именовать директории или стоит ли во
          всех случаях аннотировать типы в TypeScript, мы расходимся с общепринятыми взглядами.
        Но мы видим, что происходит на IT рынке: большая часть проектов проваливается, а крайне низкое качество несмотря
          на высокие цены — в порядке вещей.
        Чтобы получить качественно другой результат, мы должны критически взглянуть на устоявшиеся нормы написания кода
          и что-то изменить.

      p.Article-Paragraph.
        Качественный код — вот доказательство того, что мы идём в правильном направлении.
        Если Вы хотите самостоятельно оценить качество нашего кода, то можете посмотреть исходный код наших библиотек
          и фреймворков на GitHub.
        Все они используют те пресеты, которые опубликованы на этом сайте.


      p.Article-Paragraph.
        И хотя качество - понятие размытое, на этом показателе основываются такие более понятные как:

      ol.Article-OrderedList

        li Срок жизни приложения
        li Стоимость и время добавления нового функционала
        li Суммарное колиество багов на страницу сайта/приложения
        li Среднее время на поиск причины бага
        li Среднее время на исправление бага
        li Стоимость и время вовлечения нового инженера в проект
